// A estrutura do layout é projetada para ser utilizada em listas de informações
  que exibem coleções de carros e especificações do mesmo, permitindo aos usuários obter rapidamente
  informações essenciais e visuais sobre cada carro. 


<?xml version="1.0" encoding="utf-8"?> // Declaração padrão do XML. 

<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent" // A largura do layout se ajusta à largura do elemento pai. 
    android:layout_height="wrap_content" // A altura do layout se ajusta ao conteúdo. 
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"> // Ferramentas de namespace para design-time atributos 

    <!-- TextView para exibir o nome do carro -->

    <TextView
        android:id="@+id/nome" // Identificador único para o TextView. 
        android:layout_width="0dp" // Largura definida como 0dp para que as restrições de início e fim determinem a largura real. 
        android:layout_height="wrap_content" // Altura se ajusta ao conteúdo do TextView. 
        android:layout_margin="16dp" // Margem de 16dp em todos os lados. 
        android:textSize="18sp" // Tamanho do texto definido em sp (scale-independent pixels). 
        app:layout_constraintEnd_toEndOf="parent" // Restrição de fim alinhado ao fim do layout pai. 
        app:layout_constraintStart_toStartOf="parent" // Restrição de início alinhado ao início do layout pai. 
        app:layout_constraintTop_toTopOf="parent" // Restrição de topo alinhado ao topo do layout pai. 
        tools:text="Courrier" /> // Texto de exemplo para visualização no editor. 

    <!-- TextView para exibir a descrição do carro -->

    <TextView
        android:id="@+id/descricao" // Identificador único para o TextView. 
        android:layout_width="0dp" // Largura definida como 0dp para que as restrições de início e fim determinem a largura real. 
        android:layout_height="wrap_content" // Altura se ajusta ao conteúdo do TextView. 
        android:layout_marginStart="16dp" // Margem de início de 16dp. 
        android:layout_marginEnd="16dp" // Margem de fim de 16dp. 
        app:layout_constraintEnd_toEndOf="parent" // Restrição de fim alinhado ao fim do layout pai. 
        app:layout_constraintStart_toStartOf="parent" // Restrição de início alinhado ao início do layout pai. 
        app:layout_constraintTop_toBottomOf="@id/nome" // Restrição de topo alinhado ao fundo do TextView nome. 
        tools:text="Carro horrível, caçamba e step de fácil remoção" /> // Texto de exemplo para visualização no editor. 

    <!-- TextView para exibir a marca do carro -->

    <TextView
        android:id="@+id/marca" // Identificador único para o TextView. 
        android:layout_width="0dp" // Largura definida como 0dp para que as restrições de início e fim determinem a largura real. 
        android:layout_height="wrap_content" // Altura se ajusta ao conteúdo do TextView. 
        android:layout_marginStart="16dp" // Margem de início de 16dp. 
        android:layout_marginEnd="16dp" // Margem de fim de 16dp. 
        app:layout_constraintEnd_toEndOf="parent" // Restrição de fim alinhado ao fim do layout pai. 
        app:layout_constraintStart_toStartOf="parent" // Restrição de início alinhado ao início do layout pai. 
        app:layout_constraintTop_toBottomOf="@id/descricao" // Restrição de topo alinhado ao fundo do TextView descrição. 
        tools:text="Ford" /> // Texto de exemplo para visualização no editor. 

    <!-- TextView para exibir o valor do carro -->

    <TextView
        android:id="@+id/valor" // Identificador único para o TextView. 
        android:layout_width="0dp" // Largura definida como 0dp para que as restrições de início e fim determinem a largura real. 
        android:layout_height="wrap_content" // Altura se ajusta ao conteúdo do TextView. 
        android:layout_marginStart="16dp" // Margem de início de 16dp. 
        android:layout_marginEnd="16dp" // Margem de fim de 16dp. 
        app:layout_constraintEnd_toEndOf="parent" />// Restrição de fim alinhado ao fim do layout pai

     <!-- ImageView para exibir a imagem do carro -->

    <ImageView
        android:id="@+id/imageUrl" // Identificador único para imageUrl
        android:layout_width="wrap_content" // Define a largura da ImageView como "wrap_content". Isso significa que a largura da ImageView será ajustada ao tamanho da imagem.
        app:layout_constraintEnd_toEndOf="parent" // A borda direita da ImageView estará alinhada com a borda direita do seu layout pai.
        app:layout_constraintStart_toStartOf="parent" // A borda esquerda da ImageView estará alinhada com a borda esquerda do seu layout pai.
        app:layout_constraintTop_toBottomOf="@id/valor" // A borda superior da ImageView estará posicionada abaixo da view com o id valor.
        app:srcCompat="@drawable/courrier" // Define a imagem a ser exibida na ImageView. Neste caso, a imagem courrier do diretório drawable será utilizada.
        tools:layout_editor_absoluteX="0dp" // Define a posição X da ImageView no editor de layout. Este atributo é ignorado em tempo de execução.
        tools:layout_editor_absoluteY="78dp" // Define a posição Y da ImageView no editor de layout. Este atributo é ignorado em tempo de execução.
        />


</androidx.constraintlayout.widget.ConstraintLayout>